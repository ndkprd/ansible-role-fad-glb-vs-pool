---

- name: Print out the GLB VS Pool existing values.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_glb_vs_pool_api_endpoint
      % (vs_pool.name), validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload') }}
  loop: "{{ fad_glb_vs_pools }}"
  loop_control:
    loop_var: vs_pool
    label: "{{ vs_pool.name }}"
  tags: [debug]

- name: Create new GLB VS Pool entry if it's not found.
  ansible.builtin.uri:
    method: POST
    url: "{{ fad_glb_vs_pool_api_endpoint | format(vs_pool.name) }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "check-server-status": "{{ vs_pool.check_server_status | default('enable') }}",
        "check-virtual-server-existent": "{{ vs_pool.check_virtual_server_existent | default('enable') }}",
        "load-balance-method": "{{ vs_pool.load_balance_method | default('wrr') }}",
        "mkey": "{{ vs_pool.name }}"
      }
  register: fad_glb_vs_pool_post_results
  loop: "{{ fad_glb_vs_pools }}"
  loop_control:
    loop_var: vs_pool
    label: "{{ vs_pool.name }}"
  when: >
    (lookup('url', fad_glb_vs_pool_api_endpoint
    % (vs_pool.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload').mkey is undefined
  changed_when: "fad_glb_vs_pool_post_results.json.payload == 0"
  failed_when: fad_glb_vs_pool_post_results.json.payload not in [0, -15]

- name: Update GLB VS Pool entry if it's exist and any of its value is changed.
  ansible.builtin.uri:
    method: PUT
    url: "{{ fad_glb_vs_pool_api_endpoint | format(vs_pool.name) }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
    body: |
      {
        "check-server-status": "{{ vs_pool.check_server_status | default('enable') }}",
        "check-virtual-server-existent": "{{ vs_pool.check_virtual_server_existent | default('enable') }}",
        "load-balance-method": "{{ vs_pool.load_balance_method | default('wrr') }}",
        "mkey": "{{ vs_pool.name }}"
      }
  register: fad_glb_vs_pool_put_results
  loop: "{{ fad_glb_vs_pools }}"
  loop_control:
    loop_var: vs_pool
    label: "{{ vs_pool.name }}"
  when: >
    ((lookup('url', fad_glb_vs_pool_api_endpoint
    % (vs_pool.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['mkey'] is defined)
    and
    (
    (lookup('url', fad_glb_vs_pool_api_endpoint
    % (vs_pool.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['check-server-status'] != vs_pool.check_server_status  | default('enable')
    or
    (lookup('url', fad_glb_vs_pool_api_endpoint
    % (vs_pool.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['check-virtual-server-existent'] != vs_pool.check_virtual_server_existent | default('enable')
    or
    (lookup('url', fad_glb_vs_pool_api_endpoint
    % (vs_pool.name), validate_certs=false, split_lines=false,
    headers=fad_api_header) | from_json).get('payload')['load-balance-method'] != vs_pool.load_balance_method | default('wrr')
    )
  changed_when: "fad_glb_vs_pool_put_results.json.payload == 0"
  failed_when: "fad_glb_vs_pool_put_results.json.payload != 0 and fad_glb_vs_pool_put_results.json.payload != -15"

- name: Print out the GLB VS Pool values after create/update task.
  ansible.builtin.debug:
    msg: >
      {{ (lookup('url', fad_glb_vs_pool_api_endpoint
      % (vs_pool.name), validate_certs=false, split_lines=false, headers=fad_api_header) | from_json).get('payload') }}
  loop: "{{ fad_glb_vs_pools }}"
  loop_control:
    loop_var: vs_pool
    label: "{{ vs_pool.name }}"
  tags: [debug]
