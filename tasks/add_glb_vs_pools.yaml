- name: Set FAD GLB VS Pools REST API endpoint vars ({{ server_pool.name }}).
  ansible.builtin.set_fact:
    fad_api_endpoint_glb_vs_pools: https://{{ ansible_host }}/api/global_load_balance_virtual_server_pool?vdom={{ fad_vdom }}&mkey={{ server_pool.name }}
    fad_glb_vs_pools_name: "{{ server_pool.name }}"
  tags:
    - fad_glb_vsp

- name: Print out the GLB VS Pools REST API endpoint ({{ fad_glb_vs_pools_name }}).
  ansible.builtin.debug:
    msg: "This FAD GLB VS Pools REST API endpoint: {{ fad_api_endpoint_glb_vs_pools }}"
  tags:
    - fad_glb_vsp
    - debug

- name: Get the existing value of GLB VS Pools entry ({{ fad_glb_vs_pools_name }}).
  ansible.builtin.uri:
    method: GET
    url: "{{ fad_api_endpoint_glb_vs_pools }}"
    body_format: "{{ fad_api_uri_params.body_format }}"
    validate_certs: "{{ fad_api_uri_params.validate_certs }}"
    return_content: "{{ fad_api_uri_params.return_content }}"
    status_code: "{{ fad_api_uri_params.status_code }}"
    headers: "{{ fad_api_header }}"
  register: fad_glb_servers_existing_data
  delegate_to: localhost
  tags:
    - fad_glb_vsp

- name: Print the existing value of GLB VS Pools entry ({{ fad_glb_vs_pools_name }}).
  ansible.builtin.debug:
    var: fad_glb_servers_existing_data.json.payload
  delegate_to: localhost
  tags:
    - fad_glb_vsp
    - debug

# - name: Write GLB VS Pools request body json tmp file ({{ fad_glb_vs_pools_name }}).
#   ansible.builtin.copy:
#     content: |
#       {
#         "address-type": "ipv4",
#         "auth-type": "{{ glb_server.auth_type }}",
#         "auto-sync": "{{ glb_server.auto_sync }}",
#         "data-center": "{{ data_center.name }}",
#         "health_check_ctrl": "{{ glb_server.health_check_ctrl }}",
#         "health_check_list": "{{ glb_server.health_check_list }}",
#         "health_check_relationship": "{{ glb_server.health_check_relationship }}",
#         "ip": "{{ glb_server.fad_ip }}",
#         "ip6": "::",
#         "mkey": "{{ glb_server.name }}",
#         "password": "{{ glb_server.fad_pass }}",
#         "port": "{{ glb_server.fad_port }}",
#         "server-type": "{{ glb_server.server_type }}",
#         "server_member": "",
#         "server_member_count": ""
#       }
#     dest: "/tmp/fad_glb_servers_{{ glb_server.name }}_request_body.json"
#     mode: u+rw,g-rw,o-rw
#   register: request_body
#   delegate_to: localhost
#   run_once: true

# - name: Trying to create new GLB VS Pools entry ({{ fad_glb_vs_pools_name }}).
#   ansible.builtin.uri:
#     method: POST
#     url: "{{ fad_api_endpoint_glb_vs_pools }}"
#     body_format: "{{ fad_api_uri_params.body_format }}"
#     validate_certs: "{{ fad_api_uri_params.validate_certs }}"
#     return_content: "{{ fad_api_uri_params.return_content }}"
#     status_code: "{{ fad_api_uri_params.status_code }}"
#     headers: "{{ fad_api_header }}"
#     body: "{{ lookup('ansible.builtin.file', request_body.dest) }}"
#   register: fad_glb_servers_post_result
#   delegate_to: localhost
#   changed_when: "fad_glb_servers_post_result.json.payload == 0"
#   failed_when: "fad_glb_servers_post_result.json.payload != -15 and fad_glb_servers_post_result.json.payload != 0"

# - name: Update the GLB VS Pools entry if entry exist ({{ fad_glb_vs_pools_name }}).
#   ansible.builtin.uri:
#     method: PUT
#     url: "{{ fad_api_endpoint_glb_vs_pools }}"
#     body_format: "{{ fad_api_uri_params.body_format }}"
#     validate_certs: "{{ fad_api_uri_params.validate_certs }}"
#     return_content: "{{ fad_api_uri_params.return_content }}"
#     status_code: "{{ fad_api_uri_params.status_code }}"
#     headers: "{{ fad_api_header }}"
#     body: "{{ lookup('ansible.builtin.file', request_body.dest) }}"
#   register: fad_glb_servers_put_result
#   delegate_to: localhost
#   when: "fad_glb_servers_post_result.json.payload == -15"
#   failed_when: "fad_glb_servers_put_result.json.payload != -15 and fad_glb_servers_put_result.json.payload != 0"

# - name: Include the FAD GLB VS Pools member task ({{ fad_glb_vs_pools_name }}).
#   ansible.builtin.include_tasks: add_glb_servers_members.yaml
#   loop: "{{ glb_server.server_members }}"
#   loop_control:
#     loop_var: server_member

# - name: Check if the FAD GLB VS Pools value has changed ({{ fad_glb_vs_pools_name }}).
#   ansible.builtin.uri:
#     method: GET
#     url: "{{ fad_api_endpoint_glb_vs_pools }}"
#     body_format: "{{ fad_api_uri_params.body_format }}"
#     validate_certs: "{{ fad_api_uri_params.validate_certs }}"
#     return_content: "{{ fad_api_uri_params.return_content }}"
#     status_code: "{{ fad_api_uri_params.status_code }}"
#     headers: "{{ fad_api_header }}"
#   register: fad_glb_servers_new_data
#   changed_when: "fad_glb_servers_new_data.json.payload != fad_glb_servers_existing_data.json.payload"
#   delegate_to: localhost

# - name: Print the existing value of the GLB VS Pools entry ({{ fad_glb_vs_pools_name }}).
#   ansible.builtin.debug:
#     var: fad_glb_servers_new_data.json
#   delegate_to: localhost
#   tags:
#     - debug
